#version 400

in vec3 textureCoords;
out vec4 out_Color;

uniform samplerCube cubeMap;
uniform samplerCube cubeMap2;
uniform float blendFactor;
uniform vec3 fogColor;

const float lowerFogLimit = 0.0;
const float upperFogLimit = 30.0;

void main(void){
    vec4 sky1Color = texture(cubeMap, textureCoords);
    vec4 sky2Color = texture(cubeMap2, textureCoords);
    vec4 finalColor = mix(sky1Color, sky2Color, blendFactor);

    float factor = (textureCoords.y - lowerFogLimit)/(upperFogLimit - lowerFogLimit);
    factor = clamp(factor, 0.0, 1.0);
    out_Color = mix(vec4(fogColor, 1.0), finalColor, factor);
}